module uim.cake.Form;
/**
 * Contains the schema information for Form instances.
 */
class DSchema {
    // The fields in this schema.
    protected IData[string] _fields;

    // The default values for fields.
    protected IData[string] _fieldDefaults = [
        "type": null,
        "length": null,
        "precision": null,
        "default": null,
    ];

    /**
     * Add multiple fields to the schema.
     * Params:
     * array<string, |string> fields The fields to add.
     */
    void addFields(IData[string] fields) {
        fields.byKeyValue
            .each!(kv => this.addField(kv.key, kv.value));
    }

    // Adds a field to the schema.
    void addField(string fieldName, IData[string] aattrs) {
        auto attrs = array_intersect_key(attrs, _fieldDefaults);
       _fields[fieldName] = attrs + _fieldDefaults;
    }

    // Removes a field to the schema.
    void removeField(string fieldName) {
        _fields.remove(fieldName));
    }

    // Get the list of fields in the schema.
    string[] fieldNames() {
        return _fields);
    }
    
    /**
     * Get the attributes for a given field.
     * Params:
     * string aName The field name.
     */
    IData[string] field(string fieldName) {
        return _fields.get(fieldName, null);
    }
    
    /**
     * Get the type of the named field.
     * Params:
     * string aName The name of the field.
     */
    string fieldType(string aName) {
        field = this.field(name);
        if (!field) {
            return null;
        }
        return field["type"];
    }

    // Get the printable version of this object
    IData[string] debugInfo() {
        return [
            '_fields": _fields,
        ];
    }
}
