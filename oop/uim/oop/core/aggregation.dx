/***********************************************************************************
*	Copyright: © 2015-2024 Ozan Nurettin Süel (sicherheitsschmiede)                   *
*	License  : Licensed under Apache 2 [https://apache.org/licenses/LICENSE-2.0.txt] *
*	Author   : Ozan Nurettin Süel (UIManufaktur)										           * 
***********************************************************************************/
module uim.oop.core.aggregation;

import uim.oop;

/* template OOPAGGREGATION(string name, string datatype, bool isMultiple = false, bool isDefault = false) {
	const char[] OOPAGGREGATION = `
	@OOP_AGGREGATION("`~name~`", "`~datatype~`", `~(isMultiple ? "true" : "false")~`, `~(isDefault ? "true" : "false")~`) `~datatype~` _`~name~`;
	@property `~datatype~` `~name~`() { return _`~name~`; }
`;
} */

class DAggregation : DOOPElement {
	mixin(ThisElement!());

	this(string newName, string newDataType, bool newMultiple = false, bool newDefaultAgg = false) {
		super(newName);
		_datatype = newDataType;
		_isMultiple = newMultiple;
		_isDefault = newDefaultAgg;
	}

	mixin(TProperty!("string", "datatype"));
	mixin(TProperty!("bool", "isMultiple"));
	mixin(TProperty!("bool", "isDefault"));

	mixin TCloneable;
}

mixin(ShortCutElement!("Aggregation", "DAggregation"));

unittest {
	auto agg = Aggregation("Werte");
	assert(agg.name == "Werte");
	agg.name("Anderes");
	assert(agg.name == "Anderes");

	assert(agg.classname == "DAggregation");
	assert(agg.create.classname == "DAggregation");
	assert(agg.clone.classname == "DAggregation");

	DOOPElement agg1 = Aggregation();
	assert(agg1.classname == "DAggregation");
	assert(agg1.clone.classname == "DAggregation");

	ICloneable agg2 = Aggregation();
	assert((cast(Object) agg2).classname == "DAggregation");
	assert((cast(Object) agg2).classinfo.create.classname == "DAggregation");
	assert((cast(DOOPElement) agg2).clone.classname == "DAggregation");
}
