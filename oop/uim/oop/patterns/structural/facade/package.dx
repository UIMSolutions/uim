/*********************************************************************************************************
  Copyright: © 2015-2024 Ozan Nurettin Süel (UIManufaktur)                                        
  License: Subject to the terms of the Apache 2.0 license, as written in the included LICENSE.txt file.  
  Authors: Ozan Nurettin Süel (UIManufaktur)                                                      
**********************************************************************************************************/
module uim.oop.patterns.structural.facade;

import uim.oop;

@safe:

/// Create an interface.
interface IShape {
   void draw();
}

/// Create concrete classes implementing the same interface.
class DRectangle : IShape {

   override void draw() {
      writeln("Rectangle::draw()");
   }
}

class DSquare : IShape {

   override void draw() {
      writeln("Square::draw()");
   }
}

class DCircle : IShape {

   override void draw() {
      writeln("Circle::draw()");
   }
}

/// Create a facade class.
class DShapeMaker {
   private IShape circle;
   private IShape rectangle;
   private IShape square;

   this() {
      circle = new DCircle();
      rectangle = new DRectangle();
      square = new DSquare();
   }

   void drawCircle() {
      circle.draw();
   }

   void drawRectangle() {
      rectangle.draw();
   }

   void drawSquare() {
      square.draw();
   }
}
/// Use the facade to draw various types of shapes.
version (test_uim_oop) {
   unittest {
      writeln("FacadePatternDemo");

      DShapeMaker shapeMaker = new DShapeMaker();

      shapeMaker.drawCircle();
      shapeMaker.drawRectangle();
      shapeMaker.drawSquare();
   }
}
