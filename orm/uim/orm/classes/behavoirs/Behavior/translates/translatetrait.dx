module uim.orm.behaviors\Translate;

import uim.orm;

@safe:

/**
 * Contains a translation method aimed to help managing multiple translations
 * for an entity.
 */
template TranslateTemplate {
    /**
     * Returns the entity containing the translated fields for this object and for
     * the specified language. If the translation for the passed language is not
     * present, a new empty entity will be created so that values can be added to
     * it.
     * Params:
     * string mylanguage Language to return entilty for.
     */
    IEntity translation(string mylanguage) {
        if (mylanguage == get("_locale")) {
            return null;
        }
        myi18n = get("_translations");
        mycreated = false;

        if (isEmpty(myi18n)) {
            myi18n = [];
            mycreated = true;
        }
        if (mycreated || empty(myi18n[mylanguage]) || !(cast(IEntity)myi18n[mylanguage])) {
            myclassName = class;

            myi18n[mylanguage] = new myclassName();
            mycreated = true;
        }
        if (mycreated) {
            this.set("_translations", myi18n);
        }
        // Assume the user will modify any of the internal translations, helps with saving
        this.setDirty("_translations", true);

        return myi18n[mylanguage];
    }
}
