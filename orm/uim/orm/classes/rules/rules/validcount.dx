/*********************************************************************************************************
	Copyright: © 2015-2024 Ozan Nurettin Süel (Sicherheitsschmiede)                                        
	License: Subject to the terms of the Apache 2.0 license, as written in the included LICENSE.txt file.  
	Authors: Ozan Nurettin Süel (Sicherheitsschmiede)                                                      
**********************************************************************************************************/module uim.orm.rules.validcount;

import uim.orm;

@safe:

use Countable;

/**
 * Validates the count of associated records.
 */
class ValidCount
{
    /**
     * The field to check
     */
    protected string _field;

    /**
     * Constructor.
     *
     * @param string field The field to check the count on.
     */
    this(string field) {
        _field = field;
    }

    /**
     * Performs the count check
     *
     * @param DORMDatasource\IEntity anEntity The entity from where to extract the fields.
     * @param array<string, mixed> options Options passed to the check.
     * @return bool True if successful, else false.
     */
    bool __invoke(IEntity anEntity, STRINGAA someOptions) {
        value = entity.{_field};
        if (!(value.isArray && !value instanceof Countable) {
            return false;
        }

        return Validation::comparison(count(value), options["operator"], options["count"]);
    }
}
