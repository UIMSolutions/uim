/****************************************************************************************************************
* Copyright: © 2017-2024 Ozan Nurettin Süel (aka UIManufaktur)                                                  *
* License: Subject to the terms of the Apache 2.0 license, as written in the included LICENSE.txt file.         *
* Authors: Ozan Nurettin Süel (aka UIManufaktur)                                                                *
*****************************************************************************************************************/
module uim.views.mixins.idgenerator;import uim.views;@safe:/** * A mixin template that provides id generating methods to be * used in various widget classes. */mixin template TIdGenerator() {    // Prefix for id attribute.    protected string _idPrefix = null;    // A list of id suffixes used in the current rendering.    protected string[] _idSuffixes;    // Clear the stored ID suffixes.    protected void _clearIds() {       _idSuffixes = null;    }        /**     * Generate an ID attribute for an element.     * Ensures that id"s for a given set of fields are unique.     */    protected string _id(string attributename, string attributeValue) {        auto idAttName = _domId(attributename);        string mysuffix = _idSuffix(attributeValue);        return (idAttName ~ "-" ~ mysuffix).strip("-");    }        /**     * Generate an ID suffix.     *     * Ensures that id"s for a given set of fields are unique.     */    protected string _idSuffix(string idAttribute) {        /* string myidSuffix = idAttribute.replace(["/", "@", "<", ">", " ", """, "\""], "-").lower;        auto mycount = 1;        auto mycheck = myidSuffix;        while (isIn(mycheck, _idSuffixes, true)) {            mycheck = myidSuffix ~ mycount++;        }       _idSuffixes ~= mycheck;        return mycheck; */        return null;     }        // Generate an ID suitable for use in an ID attribute.    protected string _domId(string valueToConvert) {        /* string mydomId = Text.slug(valueToConvert, "-").lower;        if (_idPrefix) {            mydomId = _idPrefix ~ "-" ~ mydomId;        }        return mydomId; */        return null;    }} 